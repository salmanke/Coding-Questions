Given a matrix mat[][] of size M*N. Traverse and print the matrix in spiral form.

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args)
	 {
     	Scanner in=new Scanner(System.in);
        int x=in.nextInt();
        while(x-->0){
        	int m=in.nextInt();
        	int n=in.nextInt();
        	int a[][]=new int[m][n];
        	for(int i=0;i<m;i++){
        	    for(int j=0;j<n;j++){
        	        a[i][j]=in.nextInt();
        	    }
        	}
        	ArrayList<Integer> li=spiral(a,m,n);
        	for(int i=0;i<li.size();i++){
        	    System.out.print(li.get(i)+" ");
        	}
        }
	 }
	 public static ArrayList<Integer> spiral(int[][] a,int m,int n){
	     
	     ArrayList<Integer> res=new ArrayList<Integer>();
	     if(a==null||m==0)
	        return res;
	     int top=0,down=m-1,left=0,right=n-1,dir=0;
	     int size=m*n;
	     while(top<=down&&left<=right){
	         if(dir==0){
	             for(int i=left;i<=right;i++){
	                 res.add(a[top][i]);
	             }
	             top++;
	         }
	         else if(dir==1){
	             for(int i=top;i<=down;i++){
	                 res.add(a[i][right]);
	             }
	             right--;
	         }
	         else if(dir==2){
	             for(int i=right;i>=left;i--){
	                 res.add(a[down][i]);
	             }
	             down--;
	         }
	         else if(dir==3){
	             for(int i=down;i>=top;i--){
	                 res.add(a[i][left]);
	             }
	             left++;
	         }
	         dir=(dir+1)%4;
	     }
	     /*
	     while(res.size()<size){
	         for(int i=left;i<=right&&res.size()<size;i++){
	                 res.add(a[top][i]);
	             }
	             top++;
	         for(int i=top;i<=down&&res.size()<size;i++){
	                 res.add(a[i][right]);
	             }
	             right--;
	         for(int i=right;i>=left&&res.size()<size;i--){
	                 res.add(a[down][i]);
	             }
	             down--;
	         for(int i=down;i>=top&&res.size()<size;i--){
	                 res.add(a[i][left]);
	             }
	             left++;
	     }*/
	     
	     return res;
	 }
}
